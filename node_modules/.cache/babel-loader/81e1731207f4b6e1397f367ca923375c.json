{"ast":null,"code":"var _jsxFileName = \"/home/radhetians/Desktop/frontend/src/components/AskQuestionScreen.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport { ClassicEditor } from '@ckeditor/ckeditor5-build-classic';\n\nfunction AskQuestionScreen(props) {\n  const question = useSelector(state => state.questionSave);\n  const {\n    quest,\n    questloading,\n    questerror\n  } = question;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [tags, setTags] = useState('');\n\n  const submitHandler = e => {\n    e.preventDefault(); // dispatch(signin(email, password));\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    className: \"ask-question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text text-muted question-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 37\n    }\n  }, \"Question Title*\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"question-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 115\n    }\n  }, \"Be specific and imagine you\\u2019re asking a question to another person\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control form-control-lg\",\n    onChange: e => setTitle(e.target.value),\n    type: \"text\",\n    placeholder: \"e.g. Is there an R function for finding the index of an element in a vector?\",\n    style: {\n      fontSize: '12px',\n      fontFamily: 'Montserrat, sans-serif'\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text text-muted question-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 37\n    }\n  }, \"Question Body*\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"question-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 114\n    }\n  }, \"Include all the information someone would need to answer your question\"), /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text text-muted question-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 37\n    }\n  }, \"Question Tags*\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"question-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 114\n    }\n  }, \"Add up to 5 tags to describe what your question is about\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    onChange: e => setTags(e.target.value),\n    type: \"text\",\n    placeholder: \"e.g. net,php,json,python\",\n    style: {\n      fontSize: '12px',\n      fontFamily: 'Montserrat, sans-serif'\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, questloading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 30\n    }\n  }, \"Loading...\"), questerror && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 28\n    }\n  }, questerror)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Save\")));\n}\n\nexport default AskQuestionScreen;","map":{"version":3,"sources":["/home/radhetians/Desktop/frontend/src/components/AskQuestionScreen.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","CKEditor","ClassicEditor","AskQuestionScreen","props","question","state","questionSave","quest","questloading","questerror","title","setTitle","description","setDescription","tags","setTags","submitHandler","e","preventDefault","target","value","fontSize","fontFamily"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport { ClassicEditor } from '@ckeditor/ckeditor5-build-classic';\n\n\n\nfunction AskQuestionScreen(props) {\n\n    const question = useSelector((state) => state.questionSave);\n    const { quest, questloading, questerror } = question;\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [tags, setTags] = useState('');\n    \n    const submitHandler = (e) => {\n        e.preventDefault();\n        // dispatch(signin(email, password));\n\n    }\n\n\n\n    return (\n        <form  onSubmit={submitHandler} className=\"ask-question\">\n        <div className=\"form-group\"><small className=\"form-text text-muted question-label\">Question Title*</small><label className=\"question-hint\">Be specific and imagine youâ€™re asking a question to another person</label>\n            <input className=\"form-control form-control-lg\" onChange={(e) => setTitle(e.target.value)} type=\"text\" placeholder=\"e.g. Is there an R function for finding the index of an element in a vector?\" style={{fontSize: '12px', fontFamily: 'Montserrat, sans-serif'}} required/>\n        </div>\n        <div className=\"form-group\"><small className=\"form-text text-muted question-label\">Question Body*</small><label className=\"question-hint\">Include all the information someone would need to answer your question</label>\n            {/* <textarea className=\"form-control form-control-lg\" onChange={(e) => setDescription(e.target.value)} required></textarea> */}\n            <CKEditor editor={ClassicEditor} data={description} onChange={(e) => setDescription(e.target.value)} />\n        </div>\n        <div className=\"form-group\"><small className=\"form-text text-muted question-label\">Question Tags*</small><label className=\"question-hint\">Add up to 5 tags to describe what your question is about</label>\n            <input className=\"form-control\" onChange={(e) => setTags(e.target.value)} type=\"text\" placeholder=\"e.g. net,php,json,python\" style={{fontSize: '12px', fontFamily: 'Montserrat, sans-serif'}} required/>\n        </div>\n        <div className=\"form-group\">\n            {questloading && <div>Loading...</div>}\n            {questerror && <div>{questerror}</div>}\n        </div>\n        <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\" type=\"submit\">Save</button>\n        </div>\n    </form>\n            \n    );\n\n}\n\nexport default AskQuestionScreen;"]},"metadata":{},"sourceType":"module"}