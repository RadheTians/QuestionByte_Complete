{"ast":null,"code":"var _jsxFileName = \"/home/radhetians/Desktop/frontend/src/components/AnswerQuestionScreen.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { saveAnswer } from '../actions/questionActions';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nfunction AnswerQuestionScreen(props) {\n  const id = props.location.state;\n  const question = useSelector(state => state.questionSave);\n  const {\n    quest,\n    questloading,\n    questerror\n  } = question;\n  const [answer, setAnswer] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault(); // questionId, userId, userName, answer\n\n    dispatch(saveAnswer(id, userInfo._id, userInfo.userName, answer)); // props.history.push('/');\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    className: \"ask-question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text text-muted question-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 37\n    }\n  }, \"Answer to the Question*\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"question-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 123\n    }\n  }, \"Include all the information someone would need to understand your answer\"), /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: answer,\n    onChange: (event, editor) => setAnswer(editor.getData()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, questloading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 30\n    }\n  }, \"Loading...\"), questerror && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 28\n    }\n  }, questerror)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Save\"))));\n}\n\nexport default AnswerQuestionScreen;","map":{"version":3,"sources":["/home/radhetians/Desktop/frontend/src/components/AnswerQuestionScreen.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","saveAnswer","CKEditor","ClassicEditor","AnswerQuestionScreen","props","id","location","state","question","questionSave","quest","questloading","questerror","answer","setAnswer","userSignin","userInfo","dispatch","submitHandler","e","preventDefault","_id","userName","event","editor","getData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA0B,4BAA1B;AAEA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;AAGA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AACjC,QAAMC,EAAE,GAAGD,KAAK,CAACE,QAAN,CAAeC,KAA1B;AACA,QAAMC,QAAQ,GAAGV,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACE,YAAlB,CAA5B;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,YAAT;AAAuBC,IAAAA;AAAvB,MAAsCJ,QAA5C;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMkB,UAAU,GAAGjB,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACQ,UAAlB,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeD,UAArB;AACA,QAAME,QAAQ,GAAGlB,WAAW,EAA5B;;AAEA,QAAMmB,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF,GADyB,CAEzB;;AACAH,IAAAA,QAAQ,CAACjB,UAAU,CAACK,EAAD,EAAKW,QAAQ,CAACK,GAAd,EAAmBL,QAAQ,CAACM,QAA5B,EAAsCT,MAAtC,CAAX,CAAR,CAHyB,CAIzB;AAEH,GAND;;AAUA,sBACA,uDACA;AAAO,IAAA,QAAQ,EAAEK,aAAjB;AAAgC,IAAA,SAAS,EAAC,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4B;AAAO,IAAA,SAAS,EAAC,qCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA5B,eAAkH;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAAlH,eACI,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEhB,aAAlB;AAAiC,IAAA,IAAI,EAAEW,MAAvC;AAA+C,IAAA,QAAQ,EAAE,CAAEU,KAAF,EAASC,MAAT,KAAqBV,SAAS,CAACU,MAAM,CAACC,OAAP,EAAD,CAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,YAAY,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADrB,EAEKC,UAAU,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,UAAN,CAFnB,CAJJ,eAQI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAA8C,IAAA,IAAI,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CARJ,CADA,CADA;AAmBH;;AAED,eAAeT,oBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { saveAnswer} from '../actions/questionActions';\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n\nfunction AnswerQuestionScreen(props) {\n    const id = props.location.state;\n    const question = useSelector((state) => state.questionSave);\n    const { quest, questloading, questerror } = question;\n    const [answer, setAnswer] = useState('');\n    const userSignin = useSelector((state) => state.userSignin);\n    const { userInfo } = userSignin;\n    const dispatch = useDispatch();\n    \n    const submitHandler = (e) => {\n        e.preventDefault();\n        // questionId, userId, userName, answer\n        dispatch(saveAnswer(id, userInfo._id, userInfo.userName, answer));\n        // props.history.push('/');\n\n    }\n\n\n\n    return (\n    <>\n    <form  onSubmit={submitHandler} className=\"ask-question\">\n        <div className=\"form-group\"><small className=\"form-text text-muted question-label\">Answer to the Question*</small><label className=\"question-hint\">Include all the information someone would need to understand your answer</label>\n            <CKEditor editor={ClassicEditor} data={answer} onChange={( event, editor ) => setAnswer(editor.getData())} />\n        </div>\n        <div className=\"form-group\">\n            {questloading && <div>Loading...</div>}\n            {questerror && <div>{questerror}</div>}\n        </div>\n        <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\" type=\"submit\">Save</button>\n        </div>\n    </form>\n\n    </>\n            \n    );\n\n}\n\nexport default AnswerQuestionScreen;"]},"metadata":{},"sourceType":"module"}