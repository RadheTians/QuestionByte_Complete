{"ast":null,"code":"var _jsxFileName = \"/home/radhetians/Desktop/frontend/src/components/AskQuestionScreen.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nfunction AskQuestionScreen(props) {\n  const question = useSelector(state => state.questionSave);\n  const {\n    quest,\n    questloading,\n    questerror\n  } = question;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [tags, setTags] = useState('');\n\n  const submitHandler = e => {\n    e.preventDefault(); // dispatch(signin(email, password));\n  };\n\n  return /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: \"<p>Hello from CKEditor 5!</p>\",\n    onReady: editor => {\n      // You can store the \"editor\" and use when it is needed.\n      console.log('Editor is ready to use!', editor);\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      console.log({\n        event,\n        editor,\n        data\n      });\n    },\n    onBlur: (event, editor) => {\n      console.log('Blur.', editor);\n    },\n    onFocus: (event, editor) => {\n      console.log('Focus.', editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }) //     <CKEditor editor={ClassicEditor} data={description} onChange={(e) => setDescription(e.target.value)} />\n  // //     <form  onSubmit={submitHandler} className=\"ask-question\">\n  // //     <div className=\"form-group\"><small className=\"form-text text-muted question-label\">Question Title*</small><label className=\"question-hint\">Be specific and imagine you’re asking a question to another person</label>\n  // //         <input className=\"form-control form-control-lg\" onChange={(e) => setTitle(e.target.value)} type=\"text\" placeholder=\"e.g. Is there an R function for finding the index of an element in a vector?\" style={{fontSize: '12px', fontFamily: 'Montserrat, sans-serif'}} required/>\n  // //     </div>\n  // //     <div className=\"form-group\"><small className=\"form-text text-muted question-label\">Question Body*</small><label className=\"question-hint\">Include all the information someone would need to answer your question</label>\n  // //         {/* <textarea className=\"form-control form-control-lg\" onChange={(e) => setDescription(e.target.value)} required></textarea> */}\n  // //         <CKEditor editor={ClassicEditor} data={description} onChange={(e) => setDescription(e.target.value)} />\n  // //     </div>\n  // //     <div className=\"form-group\"><small className=\"form-text text-muted question-label\">Question Tags*</small><label className=\"question-hint\">Add up to 5 tags to describe what your question is about</label>\n  // //         <input className=\"form-control\" onChange={(e) => setTags(e.target.value)} type=\"text\" placeholder=\"e.g. net,php,json,python\" style={{fontSize: '12px', fontFamily: 'Montserrat, sans-serif'}} required/>\n  // //     </div>\n  // //     <div className=\"form-group\">\n  // //         {questloading && <div>Loading...</div>}\n  // //         {questerror && <div>{questerror}</div>}\n  // //     </div>\n  // //     <div className=\"form-group\">\n  // //         <button className=\"btn btn-primary btn-block\" type=\"submit\">Save</button>\n  // //     </div>\n  // // </form>\n  ;\n}\n\nexport default AskQuestionScreen;","map":{"version":3,"sources":["/home/radhetians/Desktop/frontend/src/components/AskQuestionScreen.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","CKEditor","ClassicEditor","AskQuestionScreen","props","question","state","questionSave","quest","questloading","questerror","title","setTitle","description","setDescription","tags","setTags","submitHandler","e","preventDefault","editor","console","log","event","data","getData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;AAGA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAE9B,QAAMC,QAAQ,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAA5B;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,YAAT;AAAuBC,IAAAA;AAAvB,MAAsCL,QAA5C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMmB,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF,GADyB,CAEzB;AAEH,GAJD;;AAQA,sBACI,oBAAC,QAAD;AACI,IAAA,MAAM,EAAGjB,aADb;AAEI,IAAA,IAAI,EAAC,+BAFT;AAGI,IAAA,OAAO,EAAGkB,MAAM,IAAI;AAChB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,yBAAb,EAAwCF,MAAxC;AACH,KANL;AAOI,IAAA,QAAQ,EAAG,CAAEG,KAAF,EAASH,MAAT,KAAqB;AAC5B,YAAMI,IAAI,GAAGJ,MAAM,CAACK,OAAP,EAAb;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAa;AAAEC,QAAAA,KAAF;AAASH,QAAAA,MAAT;AAAiBI,QAAAA;AAAjB,OAAb;AACH,KAVL;AAWI,IAAA,MAAM,EAAG,CAAED,KAAF,EAASH,MAAT,KAAqB;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAa,OAAb,EAAsBF,MAAtB;AACH,KAbL;AAcI,IAAA,OAAO,EAAG,CAAEG,KAAF,EAASH,MAAT,KAAqB;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAa,QAAb,EAAuBF,MAAvB;AACH,KAhBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCA;AA0CH;;AAED,eAAejB,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n\nfunction AskQuestionScreen(props) {\n\n    const question = useSelector((state) => state.questionSave);\n    const { quest, questloading, questerror } = question;\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [tags, setTags] = useState('');\n    \n    const submitHandler = (e) => {\n        e.preventDefault();\n        // dispatch(signin(email, password));\n\n    }\n\n\n\n    return (\n        <CKEditor\n            editor={ ClassicEditor }\n            data=\"<p>Hello from CKEditor 5!</p>\"\n            onReady={ editor => {\n                // You can store the \"editor\" and use when it is needed.\n                console.log( 'Editor is ready to use!', editor );\n            } }\n            onChange={ ( event, editor ) => {\n                const data = editor.getData();\n                console.log( { event, editor, data } );\n            } }\n            onBlur={ ( event, editor ) => {\n                console.log( 'Blur.', editor );\n            } }\n            onFocus={ ( event, editor ) => {\n                console.log( 'Focus.', editor );\n            } }\n        />\n    //     <CKEditor editor={ClassicEditor} data={description} onChange={(e) => setDescription(e.target.value)} />\n    // //     <form  onSubmit={submitHandler} className=\"ask-question\">\n    // //     <div className=\"form-group\"><small className=\"form-text text-muted question-label\">Question Title*</small><label className=\"question-hint\">Be specific and imagine you’re asking a question to another person</label>\n    // //         <input className=\"form-control form-control-lg\" onChange={(e) => setTitle(e.target.value)} type=\"text\" placeholder=\"e.g. Is there an R function for finding the index of an element in a vector?\" style={{fontSize: '12px', fontFamily: 'Montserrat, sans-serif'}} required/>\n    // //     </div>\n    // //     <div className=\"form-group\"><small className=\"form-text text-muted question-label\">Question Body*</small><label className=\"question-hint\">Include all the information someone would need to answer your question</label>\n    // //         {/* <textarea className=\"form-control form-control-lg\" onChange={(e) => setDescription(e.target.value)} required></textarea> */}\n    // //         <CKEditor editor={ClassicEditor} data={description} onChange={(e) => setDescription(e.target.value)} />\n    // //     </div>\n    // //     <div className=\"form-group\"><small className=\"form-text text-muted question-label\">Question Tags*</small><label className=\"question-hint\">Add up to 5 tags to describe what your question is about</label>\n    // //         <input className=\"form-control\" onChange={(e) => setTags(e.target.value)} type=\"text\" placeholder=\"e.g. net,php,json,python\" style={{fontSize: '12px', fontFamily: 'Montserrat, sans-serif'}} required/>\n    // //     </div>\n    // //     <div className=\"form-group\">\n    // //         {questloading && <div>Loading...</div>}\n    // //         {questerror && <div>{questerror}</div>}\n    // //     </div>\n    // //     <div className=\"form-group\">\n    // //         <button className=\"btn btn-primary btn-block\" type=\"submit\">Save</button>\n    // //     </div>\n    // // </form>\n            \n    );\n\n}\n\nexport default AskQuestionScreen;"]},"metadata":{},"sourceType":"module"}