{"ast":null,"code":"import Axios from \"axios\";\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, MY_ORDER_LIST_REQUEST, MY_ORDER_LIST_SUCCESS, MY_ORDER_LIST_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL } from \"../constants/orderConstants\";\n\nconst createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n      payload: order\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data: {\n        data: newOrder\n      }\n    } = await Axios.post(\"/api/orders\", order, {\n      headers: {\n        Authorization: ' Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: newOrder\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MY_ORDER_LIST_REQUEST\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"/api/orders/mine\", {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: MY_ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDER_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"/api/orders\", {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n      payload: orderId\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"/api/orders/\" + orderId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n      payload: paymentResult\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.put(\"/api/orders/\" + order._id + \"/pay\", paymentResult, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELETE_REQUEST,\n      payload: orderId\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.delete(\"/api/orders/\" + orderId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { createOrder, detailsOrder, payOrder, listMyOrders, listOrders, deleteOrder };","map":{"version":3,"sources":["/home/radhetians/frontend/src/actions/orderActions.js"],"names":["Axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","MY_ORDER_LIST_REQUEST","MY_ORDER_LIST_SUCCESS","MY_ORDER_LIST_FAIL","ORDER_DELETE_REQUEST","ORDER_DELETE_SUCCESS","ORDER_DELETE_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","newOrder","post","headers","Authorization","token","error","message","listMyOrders","get","listOrders","detailsOrder","orderId","payOrder","paymentResult","put","_id","deleteOrder","delete"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    MY_ORDER_LIST_REQUEST,\n    MY_ORDER_LIST_SUCCESS,\n    MY_ORDER_LIST_FAIL,\n    ORDER_DELETE_REQUEST,\n    ORDER_DELETE_SUCCESS,\n    ORDER_DELETE_FAIL,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL\n} from \"../constants/orderConstants\";\n\nconst createOrder = (order) => async(dispatch, getState) => {\n    try {\n        dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\n        const { userSignin: { userInfo } } = getState();\n        const { data: { data: newOrder } } = await Axios.post(\"/api/orders\", order, {\n            headers: {\n                Authorization: ' Bearer ' + userInfo.token\n            }\n        });\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: newOrder });\n    } catch (error) {\n        dispatch({ type: ORDER_CREATE_FAIL, payload: error.message });\n    }\n}\n\nconst listMyOrders = () => async(dispatch, getState) => {\n    try {\n        dispatch({ type: MY_ORDER_LIST_REQUEST });\n        const { userSignin: { userInfo } } = getState();\n        const { data } = await Axios.get(\"/api/orders/mine\", {\n            headers: { Authorization: 'Bearer ' + userInfo.token }\n        });\n        dispatch({ type: MY_ORDER_LIST_SUCCESS, payload: data })\n    } catch (error) {\n        dispatch({ type: MY_ORDER_LIST_FAIL, payload: error.message });\n    }\n}\n\nconst listOrders = () => async(dispatch, getState) => {\n\n    try {\n        dispatch({ type: ORDER_LIST_REQUEST });\n        const { userSignin: { userInfo } } = getState();\n        const { data } = await Axios.get(\"/api/orders\", {\n            headers: { Authorization: 'Bearer ' + userInfo.token }\n        });\n        dispatch({ type: ORDER_LIST_SUCCESS, payload: data })\n    } catch (error) {\n        dispatch({ type: ORDER_LIST_FAIL, payload: error.message });\n    }\n}\n\nconst detailsOrder = (orderId) => async(dispatch, getState) => {\n    try {\n        dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\n        const { userSignin: { userInfo } } = getState();\n        const { data } = await Axios.get(\"/api/orders/\" + orderId, {\n            headers: { Authorization: 'Bearer ' + userInfo.token }\n        });\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\n    } catch (error) {\n        dispatch({ type: ORDER_DETAILS_FAIL, payload: error.message });\n    }\n}\n\nconst payOrder = (order, paymentResult) => async(dispatch, getState) => {\n    try {\n        dispatch({ type: ORDER_PAY_REQUEST, payload: paymentResult });\n        const { userSignin: { userInfo } } = getState();\n        const { data } = await Axios.put(\"/api/orders/\" + order._id + \"/pay\", paymentResult, {\n            headers: { Authorization: 'Bearer ' + userInfo.token }\n        });\n        dispatch({ type: ORDER_PAY_SUCCESS, payload: data })\n    } catch (error) {\n        dispatch({ type: ORDER_PAY_FAIL, payload: error.message });\n    }\n}\n\nconst deleteOrder = (orderId) => async(dispatch, getState) => {\n    try {\n        dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\n        const { userSignin: { userInfo } } = getState();\n        const { data } = await Axios.delete(\"/api/orders/\" + orderId, {\n            headers: { Authorization: 'Bearer ' + userInfo.token }\n        });\n        dispatch({ type: ORDER_DELETE_SUCCESS, payload: data })\n    } catch (error) {\n        dispatch({ type: ORDER_DELETE_FAIL, payload: error.message });\n    }\n}\nexport { createOrder, detailsOrder, payOrder, listMyOrders, listOrders, deleteOrder };"]},"metadata":{},"sourceType":"module"}