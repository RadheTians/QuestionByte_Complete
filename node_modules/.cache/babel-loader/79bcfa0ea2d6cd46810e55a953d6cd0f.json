{"ast":null,"code":"var _jsxFileName = \"/home/radhetians/Desktop/frontend/src/components/AskQuestionScreen.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { saveQuestion } from '../actions/questionActions';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport Spinner from \"./Spinner\";\nimport Select from \"react-dropdown-select\";\nconst options = [{\n  value: \"5c23e2fb4f3801c34cd976b5\",\n  label: \"Kennedy Thomas\"\n}, {\n  value: \"5c23e2fbcdc84527d218caca\",\n  label: \"Zelma Boyer\"\n}, {\n  value: \"5c23e2fb60c7814e787d8b09\",\n  label: \"Carter Chapman\"\n}, {\n  value: \"5c23e2fb2d6b939c5059eb4f\",\n  label: \"Ida Dunn\"\n}, {\n  value: \"5c23e2fbd35b006de4b977cf\",\n  label: \"Barlow Spence\"\n}, {\n  value: \"5c23e2fb165946d26073846f\",\n  label: \"Elnora Lane\"\n}, {\n  value: \"5c23e2fb1e8d68045cddaa86\",\n  label: \"Kelli Hines\"\n}, {\n  value: \"5c23e2fb9cb97207ff60d97f\",\n  label: \"Cooke Ray\"\n}, {\n  value: \"5c23e2fb919074d4f00cf11f\",\n  label: \"Linda Young\"\n}];\n\nfunction AskQuestionScreen(props) {\n  const question = useSelector(state => state.questionSave);\n  const {\n    loading,\n    info,\n    error\n  } = question;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [tags, setTags] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log(tags);\n    var tag = [];\n\n    for (let index = 0; index < tags.length; index++) {\n      tag.push(tags[index].label);\n    }\n\n    console.log(tag); //dispatch(saveQuestion(userInfo._id, userInfo.userName, title, description,tag));\n    // props.history.push('/');\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    className: \"ask-question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text text-muted question-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 45\n    }\n  }, \"Question Title*\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"question-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 123\n    }\n  }, \"Be specific and imagine you\\u2019re asking a question to another person\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control form-control-lg\",\n    onChange: e => setTitle(e.target.value),\n    type: \"text\",\n    placeholder: \"e.g. Is there an R function for finding the index of an element in a vector?\",\n    style: {\n      fontSize: '12px',\n      fontFamily: 'Montserrat, sans-serif'\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text text-muted question-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 45\n    }\n  }, \"Question Body*\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"question-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 122\n    }\n  }, \"Include all the information someone would need to answer your question\"), /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: description,\n    onChange: (event, editor) => setDescription(editor.getData()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text text-muted question-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 45\n    }\n  }, \"Question Tags*\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"question-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 122\n    }\n  }, \"Add up to 5 tags to describe what your question is about\"), /*#__PURE__*/React.createElement(Select, {\n    className: \"form-control\",\n    multi: true,\n    dropdownPosition: \"auto\",\n    options: options,\n    placeholder: \"e.g. net,php,json,python\",\n    onChange: value => setTags(value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, \"Loading...\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 31\n    }\n  }, error)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"Save\"))));\n}\n\nexport default AskQuestionScreen;","map":{"version":3,"sources":["/home/radhetians/Desktop/frontend/src/components/AskQuestionScreen.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","saveQuestion","CKEditor","ClassicEditor","Spinner","Select","options","value","label","AskQuestionScreen","props","question","state","questionSave","loading","info","error","title","setTitle","description","setDescription","tags","setTags","userSignin","userInfo","dispatch","submitHandler","e","preventDefault","console","log","tag","index","length","push","target","fontSize","fontFamily","event","editor","getData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA4B,4BAA5B;AAEA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,MAAMC,OAAO,GAAG,CACZ;AACEC,EAAAA,KAAK,EAAE,0BADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADY,EAKZ;AACED,EAAAA,KAAK,EAAE,0BADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALY,EASZ;AACED,EAAAA,KAAK,EAAE,0BADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATY,EAaZ;AACED,EAAAA,KAAK,EAAE,0BADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAbY,EAiBZ;AACED,EAAAA,KAAK,EAAE,0BADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAjBY,EAqBZ;AACED,EAAAA,KAAK,EAAE,0BADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CArBY,EAyBZ;AACED,EAAAA,KAAK,EAAE,0BADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAzBY,EA6BZ;AACED,EAAAA,KAAK,EAAE,0BADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CA7BY,EAiCZ;AACED,EAAAA,KAAK,EAAE,0BADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAjCY,CAAhB;;AAuCA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAE9B,QAAMC,QAAQ,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAA5B;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAA2BL,QAAjC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMyB,UAAU,GAAGxB,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACW,UAAlB,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeD,UAArB;AACA,QAAME,QAAQ,GAAGzB,WAAW,EAA5B;;AAGA,QAAM0B,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,QAAIU,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGX,IAAI,CAACY,MAAjC,EAAyCD,KAAK,EAA9C,EAAkD;AAC9CD,MAAAA,GAAG,CAACG,IAAJ,CAASb,IAAI,CAACW,KAAD,CAAJ,CAAYxB,KAArB;AAEH;;AACDqB,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ,EARyB,CASzB;AACA;AAEH,GAZD;;AAgBA,sBACI,0CAECjB,OAAO,gBAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAF,gBACJ;AAAO,IAAA,QAAQ,EAAEY,aAAjB;AAAgC,IAAA,SAAS,EAAC,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4B;AAAO,IAAA,SAAS,EAAC,qCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA5B,eAA0G;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAA1G,eACI;AAAO,IAAA,SAAS,EAAC,8BAAjB;AAAgD,IAAA,QAAQ,EAAGC,CAAD,IAAOT,QAAQ,CAACS,CAAC,CAACQ,MAAF,CAAS5B,KAAV,CAAzE;AAA2F,IAAA,IAAI,EAAC,MAAhG;AAAuG,IAAA,WAAW,EAAC,8EAAnH;AAAkM,IAAA,KAAK,EAAE;AAAC6B,MAAAA,QAAQ,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAAzM;AAAmQ,IAAA,QAAQ,MAA3Q;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4B;AAAO,IAAA,SAAS,EAAC,qCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA5B,eAAyG;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAAzG,eAEI,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAElC,aAAlB;AAAiC,IAAA,IAAI,EAAEgB,WAAvC;AAAoD,IAAA,QAAQ,EAAE,CAAEmB,KAAF,EAASC,MAAT,KAAqBnB,cAAc,CAACmB,MAAM,CAACC,OAAP,EAAD,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAJJ,eAQI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4B;AAAO,IAAA,SAAS,EAAC,qCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA5B,eAAyG;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAAzG,eAEI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,KAAK,MAAtC;AAAuC,IAAA,gBAAgB,EAAC,MAAxD;AAA+D,IAAA,OAAO,EAAElC,OAAxE;AAAiF,IAAA,WAAW,EAAC,0BAA7F;AAAwH,IAAA,QAAQ,EAAGC,KAAD,IAAWe,OAAO,CAACf,KAAD,CAApJ;AAA6J,IAAA,QAAQ,MAArK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CARJ,eAaI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKO,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADhB,EAEKE,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,KAAN,CAFd,CAbJ,eAiBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAA8C,IAAA,IAAI,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAjBJ,CAHJ,CADJ;AA+BH;;AAED,eAAeP,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { saveQuestion} from '../actions/questionActions';\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport Spinner from \"./Spinner\";\nimport Select from \"react-dropdown-select\";\n\nconst options = [\n    {\n      value: \"5c23e2fb4f3801c34cd976b5\",\n      label: \"Kennedy Thomas\"\n    },\n    {\n      value: \"5c23e2fbcdc84527d218caca\",\n      label: \"Zelma Boyer\"\n    },\n    {\n      value: \"5c23e2fb60c7814e787d8b09\",\n      label: \"Carter Chapman\",\n    },\n    {\n      value: \"5c23e2fb2d6b939c5059eb4f\",\n      label: \"Ida Dunn\"\n    },\n    {\n      value: \"5c23e2fbd35b006de4b977cf\",\n      label: \"Barlow Spence\"\n    },\n    {\n      value: \"5c23e2fb165946d26073846f\",\n      label: \"Elnora Lane\"\n    },\n    {\n      value: \"5c23e2fb1e8d68045cddaa86\",\n      label: \"Kelli Hines\"\n    },\n    {\n      value: \"5c23e2fb9cb97207ff60d97f\",\n      label: \"Cooke Ray\"\n    },\n    {\n      value: \"5c23e2fb919074d4f00cf11f\",\n      label: \"Linda Young\"\n    }\n  ];\n\nfunction AskQuestionScreen(props) {\n    \n    const question = useSelector((state) => state.questionSave);\n    const { loading, info, error } = question;\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [tags, setTags] = useState('');\n    const userSignin = useSelector((state) => state.userSignin);\n    const { userInfo } = userSignin;\n    const dispatch = useDispatch();\n         \n       \n    const submitHandler = (e) => {\n        e.preventDefault();\n        console.log(tags)\n        var tag = []\n        for (let index = 0; index < tags.length; index++) {\n            tag.push(tags[index].label);\n            \n        }\n        console.log(tag)\n        //dispatch(saveQuestion(userInfo._id, userInfo.userName, title, description,tag));\n        // props.history.push('/');\n\n    }\n\n\n\n    return (\n        <>\n        \n        {loading? <Spinner/> :\n            <form  onSubmit={submitHandler} className=\"ask-question\">\n                <div className=\"form-group\"><small className=\"form-text text-muted question-label\">Question Title*</small><label className=\"question-hint\">Be specific and imagine you’re asking a question to another person</label>\n                    <input className=\"form-control form-control-lg\" onChange={(e) => setTitle(e.target.value)} type=\"text\" placeholder=\"e.g. Is there an R function for finding the index of an element in a vector?\" style={{fontSize: '12px', fontFamily: 'Montserrat, sans-serif'}} required/>\n                </div>\n                <div className=\"form-group\"><small className=\"form-text text-muted question-label\">Question Body*</small><label className=\"question-hint\">Include all the information someone would need to answer your question</label>\n                    {/* <textarea className=\"form-control form-control-lg\" onChange={(e) => setDescription(e.target.value)} required></textarea> */}\n                    <CKEditor editor={ClassicEditor} data={description} onChange={( event, editor ) => setDescription(editor.getData())} />\n                </div>\n                <div className=\"form-group\"><small className=\"form-text text-muted question-label\">Question Tags*</small><label className=\"question-hint\">Add up to 5 tags to describe what your question is about</label>\n                    {/* <input className=\"form-control\"  type=\"text\" placeholder=\"e.g. net,php,json,python\" style={{fontSize: '12px', fontFamily: 'Montserrat, sans-serif'}} required/> */}\n                    <Select className=\"form-control\" multi dropdownPosition=\"auto\" options={options} placeholder=\"e.g. net,php,json,python\" onChange={(value) => setTags(value)} required/>\n                </div> \n\n                <div className=\"form-group\">\n                    {loading && <div>Loading...</div>}\n                    {error && <div>{error}</div>}\n                </div>\n                <div className=\"form-group\">\n                    <button className=\"btn btn-primary btn-block\" type=\"submit\">Save</button>\n                </div>\n            </form>\n        }\n\n    </>\n            \n    );\n\n}\n\nexport default AskQuestionScreen;"]},"metadata":{},"sourceType":"module"}