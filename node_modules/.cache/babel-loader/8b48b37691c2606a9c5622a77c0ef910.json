{"ast":null,"code":"var _jsxFileName = \"/home/radhetians/Desktop/frontend/src/components/AnswerQuestionScreen.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { saveQuestion } from '../actions/questionActions';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nfunction AnswerQuestionScreen(props) {\n  const question = useSelector(state => state.questionSave);\n  const {\n    quest,\n    questloading,\n    questerror\n  } = question;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [tags, setTags] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveQuestion(userInfo._id, userInfo.userName, title, description, tags.split(',')));\n    props.history.push('/');\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    className: \"ask-question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text text-muted question-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 37\n    }\n  }, \"Answer to the Question*\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"question-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 123\n    }\n  }, \"Include all the information someone would need to understand your answer\"), /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: description,\n    onChange: (event, editor) => setDescription(editor.getData()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, questloading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 30\n    }\n  }, \"Loading...\"), questerror && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 28\n    }\n  }, questerror)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Save\"))));\n}\n\nexport default AnswerQuestionScreen;","map":{"version":3,"sources":["/home/radhetians/Desktop/frontend/src/components/AnswerQuestionScreen.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","saveQuestion","CKEditor","ClassicEditor","AnswerQuestionScreen","props","question","state","questionSave","quest","questloading","questerror","title","setTitle","description","setDescription","tags","setTags","userSignin","userInfo","dispatch","submitHandler","e","preventDefault","_id","userName","split","history","push","event","editor","getData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA4B,4BAA5B;AAEA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;AAGA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAEjC,QAAMC,QAAQ,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAA5B;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,YAAT;AAAuBC,IAAAA;AAAvB,MAAsCL,QAA5C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMoB,UAAU,GAAGnB,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACW,UAAlB,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeD,UAArB;AACA,QAAME,QAAQ,GAAGpB,WAAW,EAA5B;;AAEA,QAAMqB,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAACnB,YAAY,CAACkB,QAAQ,CAACK,GAAV,EAAeL,QAAQ,CAACM,QAAxB,EAAkCb,KAAlC,EAAyCE,WAAzC,EAAqDE,IAAI,CAACU,KAAL,CAAW,GAAX,CAArD,CAAb,CAAR;AACArB,IAAAA,KAAK,CAACsB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AAEH,GALD;;AASA,sBACI,uDACJ;AAAO,IAAA,QAAQ,EAAEP,aAAjB;AAAgC,IAAA,SAAS,EAAC,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4B;AAAO,IAAA,SAAS,EAAC,qCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA5B,eAAkH;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAAlH,eAEI,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAElB,aAAlB;AAAiC,IAAA,IAAI,EAAEW,WAAvC;AAAoD,IAAA,QAAQ,EAAE,CAAEe,KAAF,EAASC,MAAT,KAAqBf,cAAc,CAACe,MAAM,CAACC,OAAP,EAAD,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrB,YAAY,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADrB,EAEKC,UAAU,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,UAAN,CAFnB,CALJ,eASI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAA8C,IAAA,IAAI,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CATJ,CADI,CADJ;AAoBH;;AAED,eAAeP,oBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { saveQuestion} from '../actions/questionActions';\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n\nfunction AnswerQuestionScreen(props) {\n\n    const question = useSelector((state) => state.questionSave);\n    const { quest, questloading, questerror } = question;\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [tags, setTags] = useState('');\n    const userSignin = useSelector((state) => state.userSignin);\n    const { userInfo } = userSignin;\n    const dispatch = useDispatch();\n    \n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(saveQuestion(userInfo._id, userInfo.userName, title, description,tags.split(',')));\n        props.history.push('/');\n\n    }\n\n\n\n    return (\n        <>\n    <form  onSubmit={submitHandler} className=\"ask-question\">\n        <div className=\"form-group\"><small className=\"form-text text-muted question-label\">Answer to the Question*</small><label className=\"question-hint\">Include all the information someone would need to understand your answer</label>\n            \n            <CKEditor editor={ClassicEditor} data={description} onChange={( event, editor ) => setDescription(editor.getData())} />\n        </div>\n        <div className=\"form-group\">\n            {questloading && <div>Loading...</div>}\n            {questerror && <div>{questerror}</div>}\n        </div>\n        <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\" type=\"submit\">Save</button>\n        </div>\n    </form>\n\n    </>\n            \n    );\n\n}\n\nexport default AnswerQuestionScreen;"]},"metadata":{},"sourceType":"module"}