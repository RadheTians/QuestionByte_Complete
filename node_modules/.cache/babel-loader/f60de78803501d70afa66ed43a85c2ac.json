{"ast":null,"code":"var _jsxFileName = \"/home/radhetians/Desktop/frontend/src/components/TagsScreen.jsx\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllUsers } from '../actions/userActions';\nimport Spinner from './Spinner';\n\nfunction TagsScreen(props) {\n  const userList = useSelector(state => state.userList);\n  const {\n    users,\n    loading,\n    error\n  } = userList;\n  console.log(users);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllUsers());\n    return () => {//\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row all-user-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, users.map(user => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3\",\n    key: user._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }\n  }, user.userName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 6\n    }\n  }, user.email)))))));\n}\n\nexport default TagsScreen;","map":{"version":3,"sources":["/home/radhetians/Desktop/frontend/src/components/TagsScreen.jsx"],"names":["React","useEffect","useDispatch","useSelector","getAllUsers","Spinner","TagsScreen","props","userList","state","users","loading","error","console","log","dispatch","map","user","_id","userName","email"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEvB,QAAMC,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA4BJ,QAAlC;AACHK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACG,QAAMK,QAAQ,GAAGb,WAAW,EAA5B;AAEHD,EAAAA,SAAS,CAAC,MAAM;AACTc,IAAAA,QAAQ,CAACX,WAAW,EAAZ,CAAR;AACA,WAAO,MAAM,CACb;AACC,KAFD;AAGH,GALK,EAKH,EALG,CAAT;AAOG,sBACF,0CACEO,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBACH;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEJD,KAAK,CAACM,GAAN,CAAWC,IAAD,iBACF;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACR;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BD,IAAI,CAACE,QAAjC,CADC,eAED;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BF,IAAI,CAACG,KAA/B,CAFC,CADF,CADQ,CADR,CAFI,CAFN,CADE;AAwBH;;AAED,eAAed,UAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllUsers } from '../actions/userActions';\nimport Spinner from './Spinner';\n\n\nfunction TagsScreen(props) {\n\n    const userList = useSelector((state) => state.userList);\n    const { users, loading, error } = userList;\n\tconsole.log(users)\n    const dispatch = useDispatch();\n\n\tuseEffect(() => {\n        dispatch(getAllUsers());\n        return () => {\n        //\n        };\n    }, []);\n\n    return (\n\t\t<>\n\t\t{ loading ? <Spinner/> :\n        <div className=\"row all-user-card\">\n\n\t\t\t{users.map((user) => (\n            <div className=\"col-3\" key={user._id}>\n\t\t\t\t<div className=\"card\">\n\t\t\t\t  <div className=\"card-body\">\n\t\t\t\t\t<h5 className=\"card-title\">{user.userName}</h5>\n\t\t\t\t\t<p className=\"card-text\">{user.email}</p>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t</div>             \n            ))\n\t\t\t}\n\t\t\n\t\t\t\n\t\t</div>\n\t\t}\n\t\t</>\n    );\n\n\n}\n\nexport default TagsScreen;"]},"metadata":{},"sourceType":"module"}